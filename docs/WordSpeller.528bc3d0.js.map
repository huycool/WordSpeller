{"version":3,"sources":["index.js"],"names":["playWrongAnswer","index","document","getElementById","className","window","requestAnimationFrame","time","speakText","text","pitch","rate","volume","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","selectedOption","voiceSelect","selectedOptions","getAttribute","i","voices","length","name","voice","speak","WordSpeller","showSettings","selectedWordIndex","inputWords","words","sayWord","answerWord","answer","value","correct","toLowerCase","every","w","src","pandaGifs","data","Math","floor","random","images","original","url","classList","add","setWords","init","getPandaGifs","trim","split","console","log","map","answerInputs","querySelectorAll","saveWords","localStorage","setItem","JSON","stringify","loadWords","parse","getItem","join","fetch","then","response","json","synth","populateVoiceList","getVoices","selectedIndex","innerHTML","findEnglishIdx","option","createElement","textContent","lang","indexOf","default","setAttribute","appendChild","undefined","onvoiceschanged"],"mappings":"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","file":"WordSpeller.528bc3d0.js","sourceRoot":"..","sourcesContent":["window.WordSpeller = function () {\r\n  return {\r\n    showSettings: false,\r\n    selectedWordIndex: 3,\r\n    inputWords: \"\",\r\n    words: [],\r\n    sayWord(index, rate = 1) {\r\n      speakText(this.words[index].text, 1, rate, 1);\r\n    },\r\n    answerWord(index) {\r\n      let answer = document.getElementById(\"answer_\" + index).value;\r\n      this.words[index].correct =\r\n        this.words[index].text.toLowerCase() === answer.toLowerCase();\r\n      if (this.words[index].correct == false) {\r\n        playWrongAnswer(index);\r\n      }\r\n\r\n      let gotAllWords = this.words.every((w) => w.correct == true);\r\n      if (gotAllWords == true) {\r\n        document.getElementById(\"greatJob-image\").src =\r\n          pandaGifs.data[Math.floor(Math.random() * 50)].images.original.url;\r\n        document.getElementById(\"greatJob\").classList.add(\"is-active\");\r\n        this.setWords();\r\n      }\r\n    },\r\n    init() {      \r\n      this.getPandaGifs();\r\n    },\r\n    setWords() {\r\n      this.words = [];\r\n      let words = this.inputWords.trim().split(\"\\n\");\r\n      console.log(words);\r\n      if (words.length > 0 && words[0] != \"\") {\r\n        this.words = words.map((w) => {\r\n          return { text: w, correct: false };\r\n        });\r\n      }\r\n      let answerInputs = document.querySelectorAll(\"[id^='answer_']\");\r\n      for (const i of answerInputs) {\r\n        i.value = \"\";\r\n      }\r\n    },\r\n    saveWords() {\r\n      this.words=[];\r\n      let words = this.inputWords.trim().split(\"\\n\");\r\n      localStorage.setItem(\"words\", JSON.stringify(words));\r\n    },\r\n    loadWords() {\r\n      this.words=[];\r\n      let words = JSON.parse(localStorage.getItem(\"words\"));\r\n      this.inputWords = words.join(\"\\n\");\r\n    },\r\n    pandaGifs: [],\r\n    getPandaGifs() {\r\n      fetch(\"panda.json\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n          pandaGifs = data;\r\n        });\r\n    },\r\n  };\r\n};\r\n\r\n// ref: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Tips#javascript_content\r\nfunction playWrongAnswer(index) {\r\n  document.getElementById(\"wordbox_\" + index).className = \"box\";\r\n  window.requestAnimationFrame(function (time) {\r\n    window.requestAnimationFrame(function (time) {\r\n      document.getElementById(\"wordbox_\" + index).className =\r\n        \"box animate-wrong\";\r\n    });\r\n  });\r\n}\r\n\r\nfunction speakText(text, pitch, rate, volume) {\r\n  // stop any speaking in progress\r\n  window.speechSynthesis.cancel();\r\n\r\n  // create new utterance with all the properties\r\n  const utterance = new SpeechSynthesisUtterance(text);\r\n  utterance.pitch = pitch;\r\n  utterance.rate = rate;\r\n  utterance.volume = volume;\r\n\r\n  var selectedOption = voiceSelect.selectedOptions[0].getAttribute(\"data-name\");\r\n  for (var i = 0; i < voices.length; i++) {\r\n    if (voices[i].name === selectedOption) {\r\n      utterance.voice = voices[i];\r\n    }\r\n  }\r\n\r\n  // speak that utterance\r\n  window.speechSynthesis.speak(utterance);\r\n}\r\n\r\nvar synth = window.speechSynthesis;\r\nvar voices = [];\r\nvar voiceSelect = document.getElementById(\"voiceSelect\");\r\n\r\nfunction populateVoiceList() {\r\n  // voices = synth.getVoices().sort(function (a, b) {\r\n  //     const aname = a.name.toUpperCase(), bname = b.name.toUpperCase();\r\n  //     if (aname < bname) return -1;\r\n  //     else if (aname == bname) return 0;\r\n  //     else return +1;\r\n  // });\r\n  voices = synth.getVoices();\r\n  var selectedIndex =\r\n    voiceSelect.selectedIndex < 0 ? 0 : voiceSelect.selectedIndex;\r\n  voiceSelect.innerHTML = \"\";\r\n\r\n  let findEnglishIdx = 0;\r\n  for (i = 0; i < voices.length; i++) {\r\n    var option = document.createElement(\"option\");\r\n    option.textContent = voices[i].name + \" (\" + voices[i].lang + \")\";\r\n\r\n    if (\r\n      option.textContent.indexOf(\"en-US\") > -1 ||\r\n      option.textContent.indexOf(\"en_US\") > -1\r\n    ) {\r\n      findEnglishIdx = i;\r\n    }\r\n\r\n    if (voices[i].default) {\r\n      option.textContent += \" -- DEFAULT\";\r\n    }\r\n\r\n    option.setAttribute(\"data-lang\", voices[i].lang);\r\n    option.setAttribute(\"data-name\", voices[i].name);\r\n    voiceSelect.appendChild(option);\r\n  }\r\n  voiceSelect.selectedIndex = findEnglishIdx;\r\n}\r\n\r\npopulateVoiceList();\r\nif (\r\n  typeof speechSynthesis !== \"undefined\" &&\r\n  speechSynthesis.onvoiceschanged !== undefined\r\n) {\r\n  window.speechSynthesis.onvoiceschanged = populateVoiceList;\r\n}\r\n"]}