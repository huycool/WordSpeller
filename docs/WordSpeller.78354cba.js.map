{"mappings":"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","sources":["./src/index.js"],"sourcesContent":["window.WordSpeller = function () {\r\n  return {\r\n    showSettings: false,\r\n    selectedWordIndex: 3,\r\n    inputWords: \"\",\r\n    words: [],\r\n    sayWord(index, rate = 1) {\r\n      speakText(this.words[index].text, 1, rate, 1);\r\n    },\r\n    answerWord(index) {\r\n      let answer = document.getElementById(\"answer_\" + index).value;\r\n      this.words[index].correct =\r\n        this.words[index].text.toLowerCase() === answer.toLowerCase();\r\n      if (this.words[index].correct == false) {\r\n        playWrongAnswer(index);\r\n      }\r\n\r\n      let gotAllWords = this.words.every((w) => w.correct == true);\r\n      if (gotAllWords == true) {\r\n        document.getElementById(\"greatJob-image\").src =\r\n          this.winningGifs.data[Math.floor(Math.random() * 25)].images.original.url;\r\n        document.getElementById(\"greatJob\").classList.add(\"is-active\");\r\n        this.setWords();\r\n      }\r\n    },\r\n    init() {            \r\n      this.selectedWinGif = this.winGifOptions[Math.floor(Math.random() * this.winGifOptions.length)];\r\n      this.getWinningGifs();\r\n    },\r\n    setWords() {\r\n      this.words = [];\r\n      let words = this.inputWords.trim().split(\"\\n\");\r\n      console.log(words);\r\n      if (words.length > 0 && words[0] != \"\") {\r\n        this.words = words.map((w) => {\r\n          return { text: w, correct: false };\r\n        });\r\n      }\r\n      let answerInputs = document.querySelectorAll(\"[id^='answer_']\");\r\n      for (const i of answerInputs) {\r\n        i.value = \"\";\r\n      }\r\n    },\r\n    saveWords() {\r\n      this.words=[];\r\n      let words = this.inputWords.trim().split(\"\\n\");\r\n      localStorage.setItem(\"words\", JSON.stringify(words));\r\n    },\r\n    loadWords() {\r\n      this.words=[];\r\n      let words = JSON.parse(localStorage.getItem(\"words\"));\r\n      this.inputWords = words.join(\"\\n\");\r\n    },\r\n    selectedWinGif: \"\",\r\n    winGifOptions : [\"panda\",\"fortnite\",\"funnycats\"],\r\n    winningGifs: [],\r\n    getWinningGifs() {\r\n      fetch(this.selectedWinGif + \".json\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n          this.winningGifs = data;\r\n        });\r\n    },\r\n  };\r\n};\r\n\r\n// ref: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Tips#javascript_content\r\nfunction playWrongAnswer(index) {\r\n  document.getElementById(\"wordbox_\" + index).className = \"box\";\r\n  window.requestAnimationFrame(function (time) {\r\n    window.requestAnimationFrame(function (time) {\r\n      document.getElementById(\"wordbox_\" + index).className =\r\n        \"box animate-wrong\";\r\n    });\r\n  });\r\n}\r\n\r\nfunction speakText(text, pitch, rate, volume) {\r\n  // stop any speaking in progress\r\n  window.speechSynthesis.cancel();\r\n\r\n  // create new utterance with all the properties\r\n  const utterance = new SpeechSynthesisUtterance(text);\r\n  utterance.pitch = pitch;\r\n  utterance.rate = rate;\r\n  utterance.volume = volume;\r\n\r\n  var selectedOption = voiceSelect.selectedOptions[0].getAttribute(\"data-name\");\r\n  for (var i = 0; i < voices.length; i++) {\r\n    if (voices[i].name === selectedOption) {\r\n      utterance.voice = voices[i];\r\n    }\r\n  }\r\n\r\n  // speak that utterance\r\n  window.speechSynthesis.speak(utterance);\r\n}\r\n\r\nvar synth = window.speechSynthesis;\r\nvar voices = [];\r\nvar voiceSelect = document.getElementById(\"voiceSelect\");\r\n\r\nfunction populateVoiceList() {\r\n  // voices = synth.getVoices().sort(function (a, b) {\r\n  //     const aname = a.name.toUpperCase(), bname = b.name.toUpperCase();\r\n  //     if (aname < bname) return -1;\r\n  //     else if (aname == bname) return 0;\r\n  //     else return +1;\r\n  // });\r\n  voices = synth.getVoices();\r\n  var selectedIndex =\r\n    voiceSelect.selectedIndex < 0 ? 0 : voiceSelect.selectedIndex;\r\n  voiceSelect.innerHTML = \"\";\r\n\r\n  let findEnglishIdx = 0;\r\n  for (i = 0; i < voices.length; i++) {\r\n    var option = document.createElement(\"option\");\r\n    option.textContent = voices[i].name + \" (\" + voices[i].lang + \")\";\r\n\r\n    if (\r\n      option.textContent.indexOf(\"en-US\") > -1 ||\r\n      option.textContent.indexOf(\"en_US\") > -1\r\n    ) {\r\n      findEnglishIdx = i;\r\n    }\r\n\r\n    if (voices[i].default) {\r\n      option.textContent += \" -- DEFAULT\";\r\n    }\r\n\r\n    option.setAttribute(\"data-lang\", voices[i].lang);\r\n    option.setAttribute(\"data-name\", voices[i].name);\r\n    voiceSelect.appendChild(option);\r\n  }\r\n  voiceSelect.selectedIndex = findEnglishIdx;\r\n}\r\n\r\npopulateVoiceList();\r\nif (\r\n  typeof speechSynthesis !== \"undefined\" &&\r\n  speechSynthesis.onvoiceschanged !== undefined\r\n) {\r\n  window.speechSynthesis.onvoiceschanged = populateVoiceList;\r\n}\r\n"],"names":["speakText","text","pitch","rate","volume","window","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","selectedOption","voiceSelect","selectedOptions","getAttribute","i","voices","length","name","voice","speak","WordSpeller","showSettings","selectedWordIndex","inputWords","words","sayWord","index","arguments","undefined","this","answerWord","answer","document","getElementById","value","correct","toLowerCase","className","requestAnimationFrame","time","playWrongAnswer","every","w","src","winningGifs","data","Math","floor","random","images","original","url","classList","add","setWords","init","selectedWinGif","winGifOptions","getWinningGifs","trim","split","console","log","map","_step","_iterator","$b350cd9db4549ae05bfb23b905ede80$var$_createForOfIteratorHelper","querySelectorAll","s","n","done","err","e","f","saveWords","localStorage","setItem","JSON","stringify","loadWords","parse","getItem","join","_this","fetch","then","response","json","synth","populateVoiceList","getVoices","selectedIndex","innerHTML","findEnglishIdx","option","createElement","textContent","lang","indexOf","default","setAttribute","appendChild","onvoiceschanged"],"version":3,"file":"WordSpeller.78354cba.js.map"}